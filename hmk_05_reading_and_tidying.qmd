---
title: "HMK 5: Reading and tidying data"
format: gfm
---

# Reading

-   [R4DS Chapters 6-9](https://r4ds.hadley.nz/data-import)

# Data import

## Q1:

-   Create a directory, within your main class directory, called `data`.
    -   Note: in general, you should store raw data in a directory called `data`.
-   Download the example file for Ch 9 [here](https://pos.it/r4ds-students-csv). Save it inside the `ddata` directory.
-   Use `read_csv()` to read the file to an R data frame. Follow the instructions in Ch 9 to format it properly. Follow the directions in Ch 9 to make sure the following are true:
    -   Column names should be *syntactic*, meaning they don't contain spaces.
    -   N/A values should be represented with the R value `NA`, not the character "N/A".
    -   Data types (character vs factor vs numeric) should be appropriate.

```{r, message=FALSE}
library(tidyverse)

sample <- read_csv("data/sample_ch9.csv")
```

## Q2

Find (or make) a data file of your own, in text format. Read it into a well-formatted data frame.

```{r, message=FALSE}
# Original format
growth_curve <- read_csv("data/growth_curve.csv")
glimpse(growth_curve)
```


```{r}
growth_curve_tidy <- growth_curve |>
  pivot_longer(cols = wild_type:hyperactive_ste11_xog1_overexpressor,
    names_to = "strain",
    values_to = "OD600"
  )

glimpse(growth_curve_tidy)
```


# Tidying

Download the data set available at <https://tiny.utk.edu/MICR_575_hmk_05>, and save it to your `data` folder. **This is a real data set:** it is the output from the evaluation forms for student colloquium speakers in the Microbiology department. I have eliminated a few columns, changed some of the scores, and edited comments, to protect student privacy, but the output is real.

First, open this .csv file with Microsoft Excel or a text reading app, to get a sense of the structure of the document. It is weird.

Why is the file formatted so inconveniently? I have no idea, but I do know that this is about an average level of inconvenient formatting for real data sets you will find in the wild.

*Note: In theory, you can pass a URL to `read_csv()` and read the file directly from the internet. In practice, that doesn't seem to work for this file. So you'll want to download this file to your hard drive.*

## Q3a

Next, use `read_csv()` to read the data into a data frame. Note that you'll need to make use of some of the optional arguments. Use `?read_csv` to see what they are.

*If you are struggling with this task, email me for hints.*

As we discussed in class, the correct shape depends on what you want to do with the data. Use `pivot_longer()` to make the data frame longer, in a way that makes sense.

```{r, message=FALSE}
colloquium_assessment <- read_csv("data/colloquium_assessment.csv")

# Remove the first four rows
ca_correct_start <- colloquium_assessment |>
  filter(!row_number() %in% c(1:4))

# Select out the odd rows
row_odd <- seq_len(nrow(ca_correct_start)) %% 2
ca_no_na_rows <- ca_correct_start[row_odd == 0, ]
  
# Remove empty columns
ca_no_na_columns <- subset(ca_no_na_rows, select = -c(RecipientLastName:ExternalReference))

# Pivot
ca_tidy <- ca_no_na_columns |>
  pivot_longer(cols = starts_with("Q"),
               names_to = "question",
               values_to = "rating")

glimpse(ca_tidy)
```


## Q3b

Finally, calculate this student's average score for each of questions 7-10.

```{r}
#Filter for only the questions we want
q710 <- ca_tidy |>
  filter(question == "Q7" | question == "Q8" | question == "Q9" | question == "Q10") |>
  arrange(question)

#Convert to numbers instead of characters
q710_int <- transform(q710, rating = as.numeric(q710$rating))

# Find the average
average <- summarise( q710_int, 
    average.score = mean(rating),
    .by = question)

glimpse(average)
```


## Important note about file paths in Quarto documents

When you render a Quarto document, RStudio spins up a new instance of R, which is separate from the instance of R that you cna interact with. The working directory for this instance of R is whatever directory your Quarto document is saved in.

If your quarto document is saved in the same directory as your RStudio project (e.g., `MICR_475`), then there is no difference between your interactive working directory and the working directory for your Quarto document.

However, if your homeworks are saved in a `HMK` directory, then the Quarto working directory will be `HMK`. To access the saved `.csv` file, `read_csv()` will need to look *up* one directory and then go back *down* into `HMK`. `..` means "up one directory", so you would need to use `read_csv("../colloquium_assessment.csv")` instead of `read_csv("colloquium_assessment.csv")`.
